/* Slick - Core */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;

  &:focus {
    outline: none;
  }

  &.dragging {
    cursor: pointer;
    cursor: hand;
  }
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;

  &:before,
  &:after {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }

  .slick-loading & {
    visibility: hidden;
  }
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  
  [dir="rtl"] & {
    float: right;
  }

  img {
    display: block;
  }

  &.slick-loading img {
    display: none;
  }

  display: none;

  &.dragging img {
    pointer-events: none;
  }

  .slick-initialized & {
    display: block;
  }

  .slick-loading & {
    visibility: hidden;
  }

  .slick-vertical & {
    display: block;
    height: auto;
    border: 1px solid transparent;
  }
}




/* Slick - Custom */
.rc-carousel {
	.interactive--navigation {
	  position: absolute;
	  top: 50%;
	  transform: translateY( -50% );
	  z-index: 200;

	  &.interactive--navigation--prev {
	    left: 0;
	  }
	  &.interactive--navigation--next {
	    right: 0;
	  }
	}

	.rc-carousel__dots {
		position: absolute;
		bottom: 0;
	  width: 100%;
	  text-align: center;
	  margin: 0;
	  padding: 1em 0;

	  li {
	    display: inline-block;
	    vertical-align: middle;
	    margin-bottom: 0;
	  }

		.slick-active {
			.interactive--pager {
				// @extend 01-components/interactive/_interactice.scss
				@extend .interactive--pager--active;
			}
		}
	}
}












$hero-bp-small: 600px;
$hero-bp-medium: 800px;
$hero-bp-large: 1000px;

/**
 * Takes in a value and adjusts is based on a modifier class
 * @param  {string} $amount The amount of padding to use
 */
@mixin position_hero_fg( $amount ) {
	&.hero__fg--top {
		padding-top: $amount * 0.5;
		padding-bottom: $amount * 1.5;
	}

	&.hero__fg--middle {
		padding-top: $amount;
		padding-bottom: $amount;
	}

	&.hero__fg--bottom {
		padding-top: $amount * 1.5;
		padding-bottom: $amount * 0.5;
	}
}

.hero {
	position: relative;
	display: block;
	line-height: normal;

	.hero__bg {
		background: center/cover no-repeat;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		margin: 0;
		z-index: 10;
	}

	.hero__fg {
		@include container( 1200px );
		position: relative;
		z-index: 20;
		padding-top: 2em;
		padding-right: 2em;
		padding-bottom: 2em;
		padding-left: 2em;
		color: $rc-white;
	}

	.hero__fg--dark {
		color: $rc-medium-grey;
	}

	h1 {
		font-size: 2em;
		margin-top: 0;
	}

	p {
		font-size: 1em;
	}

	.button {
		margin-right: 1em;
		margin-bottom: 1em;
	}

	@media ( min-width: $hero-bp-small ) {
		.hero__fg {
			padding-right: 2.5em;
			padding-left: 2.5em;
		}

		h1 {
			font-size: 3em;
		}

		p {
			font-size: 1.25em;
		}
	}

	@media ( min-width: $hero-bp-medium ) {
		h1 {
			font-size: 4em;
		}

		p {
			font-size: 1.5em;
		}
	}

	@media ( min-width: $hero-bp-large ) {
		.hero__fg {
			padding-right: 3em;
			padding-left: 3em;
		}
	}
}

.hero__fg{
	&.hero__fg--left {
		text-align: left;

		.button {
			margin-right: 1em;
		}
	}

	&.hero__fg--center {
		text-align: center;

		.button {
			margin-left: .5em;
			margin-right: .5em;
		}
	}

	&.hero__fg--right {
		text-align: right;

		.button {
			margin-left: 1em;
			margin-right: 0;
		}
	}

	// Vertical positioning
	@include position_hero_fg( 2em );

	@media ( min-width: $hero-bp-small ) {
		@include position_hero_fg( 4em );
	}

	@media ( min-width: $hero-bp-medium ) {
		@include position_hero_fg( 6em );
	}

	@media ( min-width: $hero-bp-large ) {
		@include position_hero_fg( 8em );
	}
}